- Path tracker:
#CH01 = lets break each of the steps it takes into paths and whenever the mover object
repears a coordinate means that a new path is being shapped and the last one has
failed, so a new path should be satrted from a new positon that is being taken
and it is not on the other path. Also, it is important to check to see if there
have been any options at the end of each of the paths.
So, there will be a paths list that is going to track every movement of the obejct
till it hits a previousley travelled coordinate and therefore that path has been proven
not to work therefore a new path will be made.

#CH02 = visulisor:
Is an visulazition of the way the whole process works and it is also responsible
for all the logging stuff.
  - Optimization: imagine that the object has moved in a certain way which after
  finding the right path, it is found that there have been some extra steps that
  the mover has taken that would have not affected the whole process and there
  are basically redundant to take those steps, this should be analyzed by the
  object and also it should be predicted in the future to avoid or predict if a
  move is going to be redundant or not?
#CH03 = Lets set a mode where it just tracks the users input and by doing so an algorithem
could be developed as well as debugging for the tracking process
store the number of options and then subtract from it when a move has been made
then go back into the option numbers and find the new path that it is partially located in the
previous path

#Ch04: Restructuring the whole thing in a more neat way, seperate the map and
mover module and their interaction should be limited to the main.py file.
